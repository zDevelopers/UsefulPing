# Release the project.
# To trigger, create a tag (not a release) with semantic
# versioning (the tag must start with a v).
#
# git tag -a v0.2 -m "Version 0.2"
# git push --tags
#
# This workflow will automatically:
# - build the project using Maven;
# - create a new draft release;
# - attach the built project to the release.

name: Publish new release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Extract project name
        id: project-name
        uses: actions/github-script@v3
        with:
          script: return context.repo.repo
          result-encoding: string

      - name: Create new GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.project-name.outputs.result }} ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload GitHub Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ steps.maven-publish.outputs.jar_path }}
          asset_name: ${{ steps.maven-publish.outputs.jar_name }}
          asset_content_type: application/java-archive

